{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Moose's PC\\\\Desktop\\\\Web Dev online\\\\React Section\\\\Changing Complex State\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Moose's PC\\\\Desktop\\\\Web Dev online\\\\React Section\\\\Changing Complex State\\\\src\\\\components\\\\App.jsx\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const _useState = useState({\n    fName: \"\",\n    lName: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        fullName = _useState2[0],\n        setFullName = _useState2[1];\n\n  function handleChange(event) {\n    const _event$target = _slicedToArray(event.target, 2),\n          value = _event$target[0],\n          name = _event$target[1];\n\n    setFullName(prevValue => {\n      if (name === \"fName\") {\n        return {\n          fName: value,\n          lName: prevValue.lName\n        };\n      } else if (name === \"lName\") {\n        return {\n          fName: prevValue.fName,\n          lName: value\n        };\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Hello \", fullName.fName, \" \", fullName.lName), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange,\n    name: \"fName\",\n    placeholder: \"First Name\" //value={fullName.fName } we want to have a controlled component, we want the value and state to be equal to the same thing\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange,\n    name: \"lName\",\n    placeholder: \"Last Name\" //value={fullName.lName}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Moose's PC/Desktop/Web Dev online/React Section/Changing Complex State/src/components/App.jsx"],"names":["React","useState","App","fName","lName","fullName","setFullName","handleChange","event","target","value","name","prevValue"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,GAAT,GAAe;AAAA,oBAEmBD,QAAQ,CAAC;AACvCE,IAAAA,KAAK,EAAC,EADiC;AAEvCC,IAAAA,KAAK,EAAC;AAFiC,GAAD,CAF3B;AAAA;AAAA,QAENC,QAFM;AAAA,QAEIC,WAFJ;;AAOb,WAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAAA,yCACLA,KAAK,CAACC,MADD;AAAA,UACpBC,KADoB;AAAA,UACbC,IADa;;AAG1BL,IAAAA,WAAW,CAAEM,SAAD,IAAc;AAC1B,UAAGD,IAAI,KAAK,OAAZ,EAAoB;AAChB,eAAO;AACLR,UAAAA,KAAK,EAAEO,KADF;AAELN,UAAAA,KAAK,EAAEQ,SAAS,CAACR;AAFZ,SAAP;AAIH,OALD,MAMK,IAAGO,IAAI,KAAK,OAAZ,EAAoB;AAErB,eAAO;AACPR,UAAAA,KAAK,EAAES,SAAS,CAACT,KADV;AAEPC,UAAAA,KAAK,EAAEM;AAFA,SAAP;AAIH;AACF,KAdY,CAAX;AAgBD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWL,QAAQ,CAACF,KAApB,OAA4BE,QAAQ,CAACD,KAArC,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACC,IAAA,QAAQ,EAAEG,YADX;AAEC,IAAA,IAAI,EAAC,OAFN;AAGC,IAAA,WAAW,EAAC,YAHb,CAIC;AAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AACC,IAAA,QAAQ,EAAEA,YADX;AAEC,IAAA,IAAI,EAAC,OAFN;AAGC,IAAA,WAAW,EAAC,WAHb,CAIC;AAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,CAFF,CADF;AAoBD;;AAED,eAAeL,GAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n\n  const [fullName, setFullName] = useState({\n    fName:\"\",\n    lName:\"\"\n  });\n\n  function handleChange(event){\n   const [value, name] = event.target;\n\n    setFullName((prevValue) =>{\n    if(name === \"fName\"){\n        return {\n          fName: value,\n          lName: prevValue.lName\n        }\n    }\n    else if(name === \"lName\"){\n      \n        return {\n        fName: prevValue.fName,\n        lName: value\n        }\n    }\n  });\n\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Hello {fullName.fName} {fullName.lName}</h1>\n      <form>\n        <input\n         onChange={handleChange}\n         name=\"fName\"\n         placeholder=\"First Name\"\n         //value={fullName.fName } we want to have a controlled component, we want the value and state to be equal to the same thing\n          />\n        <input\n         onChange={handleChange}\n         name=\"lName\"\n         placeholder=\"Last Name\"\n         //value={fullName.lName}\n          />\n        <button>Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}